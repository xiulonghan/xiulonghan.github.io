<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>低调的四叔</title>
  
  <subtitle>调参工程师，马列主义信奉者，社会主义实践者，共产主义接班人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-09T07:52:42.955Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>aluka</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>keras框架中融合层Merge各类函数的使用</title>
    <link href="http://yoursite.com/2019/08/09/keras-merge/"/>
    <id>http://yoursite.com/2019/08/09/keras-merge/</id>
    <published>2019-08-09T07:34:37.000Z</published>
    <updated>2019-08-09T07:52:42.955Z</updated>
    
    <content type="html"><![CDATA[<p>在使用keras的过程中，会遇到融合层merge的使用，包括Add,Subtract,Multipy,Average,Maximum,Concatenate,Dot，以下就是对相关模块的简单示例，以备后续查看。代码如下：<a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line"></span><br><span class="line">x1 = np.random.randint(<span class="number">5</span>, size=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">x2 = np.random.randint(<span class="number">5</span>, size=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">x1_t = K.variable(x1)</span><br><span class="line">x2_t = K.variable(x2)</span><br><span class="line">added = keras.layers.add([x1_t, x2_t])</span><br><span class="line"><span class="comment"># 求多个张量的和，shape保持一致</span></span><br><span class="line">sub = keras.layers.subtract([x1_t, x2_t])</span><br><span class="line"><span class="comment"># 求两个张量的差，shape保持一致</span></span><br><span class="line">mul = keras.layers.multiply([x1_t, x2_t])</span><br><span class="line"><span class="comment"># 求多个张量的乘积，元素级别，shape保持一致</span></span><br><span class="line">ave = keras.layers.average([x1_t, x2_t])</span><br><span class="line"><span class="comment"># 求多个张量的均值，元素级别，shape保持一致</span></span><br><span class="line">max = keras.layers.maximum([x1_t, x2_t])</span><br><span class="line"><span class="comment"># 求多个张量的最大值，元素级别，shape保持一致</span></span><br><span class="line">concat = keras.layers.concatenate([x1_t, x2_t], axis=<span class="number">-2</span>)</span><br><span class="line"><span class="comment"># 连接多个张量，注意axis，如本例中，axis可以为[0,1,-1,-2]</span></span><br><span class="line">dot = keras.layers.dot([x1_t, x2_t], axes=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 求多个张量的dot，注意axis</span></span><br><span class="line">print(<span class="string">'the origin x1 is :\n'</span>, x1)</span><br><span class="line">print(<span class="string">'the origin x2 is :\n'</span>, x2)</span><br><span class="line">print(<span class="string">'the add is :\n'</span>, K.eval(added))</span><br><span class="line">print(<span class="string">'the subtract is :\n'</span>, K.eval(sub))</span><br><span class="line">print(<span class="string">'the multipy is :\n'</span>, K.eval(mul))</span><br><span class="line">print(<span class="string">'the average is :\n'</span>, K.eval(ave))</span><br><span class="line">print(<span class="string">'the maximum is :\n'</span>, K.eval(max))</span><br><span class="line">print(<span class="string">'the concat is :\n'</span>, K.eval(concat))</span><br><span class="line">print(<span class="string">'the dot is :\n'</span>, K.eval(dot))</span><br></pre></td></tr></table></figure><ul><li>输出结果</li></ul><blockquote><p>the origin x1 is :<br> [[4 1]<br> [1 1]]<br>the origin x2 is :<br> [[1 3]<br> [2 2]]</p><p>the add is :<br> [[5. 4.]<br> [3. 3.]]<br>the subtract is :<br> [[ 3. -2.]<br> [-1. -1.]]<br>the multipy is :<br> [[4. 3.]<br> [2. 2.]]<br>the average is :<br> [[2.5 2. ]<br> [1.5 1.5]]<br>the maximum is :<br> [[4. 3.]<br> [2. 2.]]<br>the concat is :<br> [[4. 1.]<br> [1. 1.]<br> [1. 3.]<br> [2. 2.]]<br>the dot is :<br> [[7.]<br> [4.]]</p></blockquote><h2 id="每日一句"><a href="#每日一句" class="headerlink" title="每日一句"></a>每日一句</h2><blockquote><p> If the people we love are stolen from us, the way to have them live on is to never stop loving them. Buildings burn, people die, but real love is forever.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用keras的过程中，会遇到融合层merge的使用，包括Add,Subtract,Multipy,Average,Maximum,Concatenate,Dot，以下就是对相关模块的简单示例，以备后续查看。代码如下：
    
    </summary>
    
      <category term="Deep Learning" scheme="http://yoursite.com/categories/Deep-Learning/"/>
    
    
      <category term="keras" scheme="http://yoursite.com/tags/keras/"/>
    
      <category term="merge" scheme="http://yoursite.com/tags/merge/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>python解析号码归属地</title>
    <link href="http://yoursite.com/2019/08/01/phone-attribute/"/>
    <id>http://yoursite.com/2019/08/01/phone-attribute/</id>
    <published>2019-08-01T03:16:43.000Z</published>
    <updated>2019-08-01T08:14:49.369Z</updated>
    
    <content type="html"><![CDATA[<p>​        在实际生产环境中，特别是进行运营商数据的处理时，会解析某个号码的归属地、运营商等。本文基于百度的开源接口实现号码归属地解析。代码如下：<a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入需求的包</span></span><br><span class="line"><span class="keyword">import</span> demjson</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义号码解析函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_number_attribution</span><span class="params">(_number)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Returns the attribution information of the input number。</span></span><br><span class="line"><span class="string">    :param _number:</span></span><br><span class="line"><span class="string">    :return: _number,province,city,operator</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">'http://mobsec-dianhua.baidu.com/dianhua_api/open/location?tel='</span>+str(_number)</span><br><span class="line">        req = urllib.request.Request(url)</span><br><span class="line">        resp = urllib.request.urlopen(req)</span><br><span class="line">        content = resp.read()</span><br><span class="line">        resp = demjson.decode(content)</span><br><span class="line">        number_detail = resp[<span class="string">'response'</span>][_number][<span class="string">'detail'</span>]</span><br><span class="line">        city = number_detail[<span class="string">'area'</span>][<span class="number">0</span>][<span class="string">'city'</span>]</span><br><span class="line">        province = number_detail[<span class="string">'province'</span>]</span><br><span class="line">        operator = number_detail[<span class="string">'operator'</span>]</span><br><span class="line">        print(<span class="string">"号码：&#123;0&#125;，省份：&#123;1&#125;，城市：&#123;2&#125;，运营商：&#123;3&#125;"</span>.format(_number, province, city, operator))</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        print(ValueError)</span><br><span class="line">        </span><br><span class="line"><span class="comment">#主函数入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#测试号码</span></span><br><span class="line">    number = <span class="string">'phone_number'</span></span><br><span class="line">    get_number_attribution(_number=number)</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入：18244226985</span><br><span class="line">输出：号码：18244226985，省份：四川，城市：成都，运营商：移动</span><br><span class="line">输入：17001111234</span><br><span class="line">输出：号码：17001111234，省份：北京，城市：北京，运营商：苏宁互联</span><br><span class="line">输入：19926782222</span><br><span class="line">输出：号码：19926782222，省份：广东，城市：揭阳，运营商：电信</span><br><span class="line">**注**：其中对于虚拟运营商号段，该接口输出的不是电信、移动、联通，而是具体的代理商。</span><br></pre></td></tr></table></figure><h2 id="每日一句"><a href="#每日一句" class="headerlink" title="每日一句"></a>每日一句</h2><p><code>The great pleasure in life is doing what people say you cannot do.</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​        在实际生产环境中，特别是进行运营商数据的处理时，会解析某个号码的归属地、运营商等。本文基于百度的开源接口实现号码归属地解析。代码如下：
    
    </summary>
    
      <category term="Data Analysis" scheme="http://yoursite.com/categories/Data-Analysis/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="号码归属地" scheme="http://yoursite.com/tags/%E5%8F%B7%E7%A0%81%E5%BD%92%E5%B1%9E%E5%9C%B0/"/>
    
  </entry>
  
</feed>
